# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: '2.1'

services:
  oap:
    build:
      context: ../oap
      dockerfile: ../oap/Dockerfile.oap
    expose:
      - 11800
      - 12800
      - 10051
      - 5005
    networks:
      - e2e
    restart: on-failure
    environment:
      SW_CLUSTER_ZK_HOST_PORT: zk:2181
      SW_STORAGE_ES_CLUSTER_NODES: es:9200
      SW_JDBC_URL: jdbc:mysql://mysql:3306/swtest
      SW_STORAGE_INFLUXDB_URL: http://influxdb:8086
      JAVA_OPTS: >-
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -zn 127.0.0.1 11800"]
      interval: 5s
      timeout: 60s
      retries: 120

  provider:
    build:
      context: ../provider
      dockerfile: ../provider/Dockerfile.provider
    expose:
      - 8080
    networks:
      - e2e
    healthcheck:
      test: [ "CMD", "curl", "http://127.0.0.1:8080/healthCheck" ]
      interval: 5s
      timeout: 60s
      retries: 120

  consumer:
    build:
      context: ../consumer
      dockerfile: ../consumer/Dockerfile.consumer
    expose:
      - 8080
    networks:
      - e2e
    healthcheck:
      test: [ "CMD", "curl", "http://127.0.0.1:8080/healthCheck" ]
      interval: 5s
      timeout: 60s
      retries: 120

  satellite:
    build:
      context: ../../../
      dockerfile: test/e2e/satellite/Dockerfile.satellite
    expose:
      - 11800
    environment:
      SATELLITE_GRPC_CLIENT: oap:11800
    networks:
      - e2e
    healthcheck:
      test: [ "CMD", "sh", "-c", "nc -zn 127.0.0.1 11800" ]
      interval: 5s
      timeout: 60s
      retries: 120


networks:
  e2e: