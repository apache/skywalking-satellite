# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Licensed to Apache Software Foundation (ASF) under one or more contributor
# license agreements. See the NOTICE file distributed with
# this work for additional information regarding copyright
# ownership. Apache Software Foundation (ASF) licenses this file to you under
# the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

spans:
  {{- range .spans}}
  - traceid: {{ notEmpty .traceid }}
    segmentid: {{ notEmpty .segmentid }}
    spanid: {{ .spanid }}
    parentspanid: {{ .parentspanid }}
    refs:
      {{- if eq .servicecode "provider" }}
      {{- range .refs }}
        - traceid: {{ notEmpty .traceid }}
          parentsegmentid: {{ notEmpty .parentsegmentid }}
          parentspanid: 1
          type: CROSS_PROCESS
      {{- end }}
      {{- end }}
      {{- if eq .servicecode "consumer" }}
      []
      {{- end }}
    servicecode: {{ notEmpty .servicecode }}
    serviceinstancename: {{ notEmpty .serviceinstancename }}
    starttime: {{ gt .starttime 0 }}
    endtime: {{ gt .endtime 0 }}
    endpointname: /GET/hello
    type: {{ notEmpty .type }}
    peer:
    {{- if eq .type "Exit" }}
      provider:8080
    {{ else }}
      ""
    {{- end }}
    component:
    {{- if eq .type "Exit" }}
      GoHttpClient
    {{- end }}
    {{- if eq .type "Entry" }}
      GoHttpServer
    {{- end }}
    iserror: false
    layer: Http
    tags:
      {{- range .tags }}
      {{- if eq .key "http.method" }}
      - key: http.method
        value: GET
      {{- end }}
      {{- if eq .key "url" }}
      - key: url
        value: {{ notEmpty .value }}
      {{- end }}
      {{- if eq .key "status_code" }}
      - key: status_code
        value: "200"
      {{- end }}
      {{- end }}
    logs: []
  {{- end }}